# 원본 후보(대소문자/기호 포함). OCR이 뱉을 수 있는 모든 변형을 넓게 수용.
_UNIT_RAW = [
    "g", "mg", "µg", "μg", "ug",
    "kcal", "cal",
    "iu", "IU",
    "re", "RE",
    "ugre", "ugRE",
]

# 정규식에서 쓸 수 있게 escape
import re
UNIT_REGEX = "|".join(re.escape(u) for u in _UNIT_RAW)

# 정규 비교용 (소문자 기준)
_UNIT_SET_LOWER = {u.lower() for u in _UNIT_RAW}

# 최종 표준화 타겟(캐논 값)
# - µ/μ → u 로 통일 (ug)
# - iu → IU
# - re → RE
# - ugre → ugRE
def normalize_unit(u: str) -> str:
    if not u:
        return u
    u = u.replace("µ", "u").replace("μ", "u")
    ul = u.lower()
    if ul == "iu":
        return "IU"
    if ul == "re":
        return "RE"
    if ul == "ugre":
        return "ugRE"
    if ul == "ug":
        return "ug"
    if ul in ("mg", "g", "kcal", "cal"):
        return ul
    return u  # 알 수 없는 값은 원본 반환

def is_unit(tok: str) -> bool:
    if not tok:
        return False
    t = tok.replace("µ", "u").replace("μ", "u").lower()
    return t in _UNIT_SET_LOWER

__all__ = ["UNIT_REGEX", "normalize_unit", "is_unit"]

